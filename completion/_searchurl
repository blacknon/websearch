#compdef searchurl

    # '(- *)'{-h,--help}'[show help]'

_searchurl() {
  local context curcontext=$curcontext state line
  declare -A opt_args
  local ret=1

  # args
  _arguments -C \
    '(-h --help)'{-h,--help}'[show help]' \
    '1: :__searchurl_commands' \
    '*:: :->modes' \
    && ret=0

  # args and subcommand
  case $state in
    modes)
      case $words[1] in
        search)
          _arguments -C \
            '(-h --help)'{-h,--help}'[show help]' \
            '-t[search engine]:_values:(bing google yahoo all)' \
            '(-n --num)'{-n,--num}'[get search result num (int)]:_values:(100 200 300 400 500)' \
            '(-P --proxy)'{-P,--proxy}'[proxy server]' \
            '(-S --splash)'{-S,--splash}'[Splash URI]:_values:(localhost\:8050)' \
            '(-i --image)'{-i,--image}'[Search Image flag]' \
            '(-)*:: :->null_state' \
            && ret=0
        ;;

        suggest)
          _arguments -C \
            '(-h --help)'{-h,--help}'[show help]' \
            '-t[search engine]:_values:(bing google all)' \
            '--jap[サジェスト取得時に日本語の候補を追加で検索]' \
            '--alph[サジェスト取得時にアルファベットの候補を追加で検索]' \
            '--num[サジェスト取得時に数字の候補を追加で検索]' \
            '(-P --proxy)'{-P,--proxy}'[proxy server]' \
            '(-)*:: :->null_state' \
            && ret=0
        ;;
      esac
    ;;
  esac

  return ret
}

__searchurl_commands () {
    local -a _c
    _c=(
        'search:url検索モード'
        'suggest:suggest取得モード'
    )

    _describe -t commands Commands _c
}
